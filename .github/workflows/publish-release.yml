name: Release
on:
 workflow_dispatch:
    inputs:
      release_tag:
        required: true

jobs:
  cargo-publish:
    name: Publish Cargo
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true

      - name: Update version strings and check if it builds
        run: |
          export VERSION=${{ github.event.inputs.release_tag }}
          sed -i "s/0.0.0/$VERSION/g" ./pkg/unrust/Cargo.toml
          sed -i "s/0.0.0/$VERSION/g" ./pkg/unrust-proc-macro/Cargo.toml
          sed -i "s/0.0.0/$VERSION/g" ./pkg/inbuilt/Cargo.toml
          sed -i "s/0.0.0/$VERSION/g" ./pkg/codegen/Cargo.toml
          cargo build -p unrust

      - name: Publish to crates!
        env:
          CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}
        run: |
          cargo publish -p unrust-proc-macro --allow-dirty --token $CRATES_TOKEN
          cargo publish -p unrust-inbuilt --allow-dirty --token $CRATES_TOKEN
          cargo publish -p unrust-codegen --allow-dirty --token $CRATES_TOKEN
          cargo publish -p unrust --allow-dirty --token $CRATES_TOKEN

      - name: Unity sdk template update
        run: |
          export VERSION=${{ github.event.inputs.release_tag }}
          sed -i "s/0.0.0/$VERSION/g" ./unity/sdk/template~/Cargo.toml.template
          sed -i "s/0.0.0/$VERSION/g" ./unity/sdk/package.json

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Unity sdk tarball
        run: |
          npm pack ./unity/sdk

      - name: Upload sdk
        uses: actions/upload-artifact@v3
        with:
          name: unrust-sdk-${{ github.event.inputs.release_tag }}
          path: com.wavefunk.unrust-${{ github.event.inputs.release_tag }}.tgz

      - uses: actions/github-script@v6
        with:
           script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/release-v${{ github.event.inputs.release_tag }}',
              sha: context.sha
            })

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          name: unrust-sdk-${{ github.event.inputs.release_tag }}
          tag_name: release-v${{ github.event.inputs.release_tag }}
          fail_on_unmatched_files: true
          files: com.wavefunk.unrust-${{ github.event.inputs.release_tag }}.tgz

