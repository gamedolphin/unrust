name: Release
on:
 workflow_dispatch:
    inputs:
      release_tag:
        required: true

jobs:
  cargo-publish:
    name: Publish Cargo
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true

      - name: Update version strings and check if it builds
        run: |
          export VERSION=${{ github.event.inputs.release_tag }}
          sed -i "s/0.0.0/$VERSION/g" ./pkg/unrust/Cargo.toml
          sed -i "s/0.0.0/$VERSION/g" ./pkg/unrust-proc-macro/Cargo.toml
          sed -i "s/0.0.0/$VERSION/g" ./pkg/inbuilt/Cargo.toml
          sed -i "s/0.0.0/$VERSION/g" ./pkg/codegen/Cargo.toml
          cargo build -p unrust

      - name: Publish to crates!
        run: |
          cargo publish -p unrust-proc-macro --allow-dirty
          cargo publish -p unrust-inbuilt --allow-dirty
          cargo publish -p unrust-codegen --allow-dirty
          cargo publish -p unrust --allow-dirty

      - name: Unity sdk template update
        run: |
          export VERSION=${{ github.event.inputs.release_tag }}
          sed -i "s/0.0.0/$VERSION/g" ./unity/sdk/template~/Cargo.toml.template
          sed -i "s/0.0.0/$VERSION/g" ./unity/sdk/package.json

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Unity sdk tarball
        run: |
          npm pack ./unity/sdk

      - name: Upload sdk
        uses: actions/upload-artifact@v3
        with:
          name: unrust-sdk-${{ github.event.inputs.release_tag }}
          path: com.wavefunk.unrust-${{ github.event.inputs.release_tag }}.tgz
